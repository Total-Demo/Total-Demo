


spring.application.name=spring-gateway
# 使用 Naoos 作为服务注册发现
spring.cloud.nacos.discovery.server-addr=127.0.0.1:8848
# 使用 Sentinel 作为熔断器
#spring.cloud.sentinel.transport.port=8721
spring.cloud.sentinel.transport.dashboard=127.0.0.1:8480
spring.main.allow-bean-definition-overriding=true
# 路由数组[路由 就是指定当请求满足什么条件的时候转到哪个微服务]
# 当前路由的标识, 要求唯一
spring.cloud.gateway.routes[0].id=NACOS-CONSUMER2
# 请求要转发到的地址
spring.cloud.gateway.routes[0].uri=http://localhost:8082
# 路由的优先级,数字越小级别越高
spring.cloud.gateway.routes[0].order=0
# 断言(就是路由转发要满足的条件)
# 当请求路径满足Path指定的规则时,才进行路由转发
spring.cloud.gateway.routes[0].predicates[0]=Path=/test/test/**
# 过滤器,请求在传递过程中可以通过过滤器对其进行一定的修改
# 转发之前去掉1层路径
spring.cloud.gateway.routes[0].filters[0]=StripPrefix=1

# 路由网关配置  # 设置与服务注册发现组件结合，这样可以采用服务名的路由策略
spring.cloud.gateway.discovery.locator.enabled=true
# 配置路由规则
# 采用自定义路由 ID（有固定用法，不同的 id 有不同的功能，详见：https://cloud.spring.io/spring-cloud-gateway/2.0.x/single/spring-cloud-gateway.html#gateway-route-filters）
spring.cloud.gateway.routes[1].id=NACOS-CONSUMER
# 采用 LoadBalanceClient 方式请求，以 lb:// 开头，后面的是注册在 Nacos 上的服务名
spring.cloud.gateway.routes[1].uri=lb://nacos-consumer
# Predicate 翻译过来是“谓词”的意思，必须，主要作用是匹配用户的请求，有很多种用法 # Method 方法谓词，这里是匹配 GET 和 POST 请求
spring.cloud.gateway.routes[1].predicates[0]=Path=/gate-service/**
spring.cloud.gateway.routes[1].filters[0]=StripPrefix=1

spring.cloud.gateway.routes[2].id=NACOS-CONSUMER-FEIGN
spring.cloud.gateway.routes[2].uri=lb://nacos-consumer-feign
spring.cloud.gateway.routes[2].predicates[0]=Path=/gate-service2/**
spring.cloud.gateway.routes[2].filters[0]=StripPrefix=1


spring.cloud.gateway.routes[3].id=NACOS-CONSUMER-3
spring.cloud.gateway.routes[3].uri=lb://nacos-consumer-feign
spring.cloud.gateway.routes[3].predicates[0]=Path=/gate-service3/**
#自定义路由断言工厂
spring.cloud.gateway.routes[3].predicates[1]=Age=18,60
spring.cloud.gateway.routes[3].filters[0]=StripPrefix=1
#内置局部过滤器
spring.cloud.gateway.routes[3].filters[1]=SetStatus=201
#自定义局部过滤
spring.cloud.gateway.routes[3].filters[2]=Log=true,false




server.port=9000
# 目前无效
feign.sentinel.enabled=true
# 目前无效
management.endpoints.web.exposure.include=*
# 配置日志级别，方别调试
logging.level.org.springframework.cloud.gateway=debug